version: '3.8'

services:
  haproxy:
    image: haproxy:latest
    ports:
      - "80:80"
      - "443:443"
    configs:
      - source: haproxy_cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      app_net:
        aliases: 
          - haproxy

  carros:
    image: joandatabrick/carros-service:latest
    env_file:
      - .env
    ports:
      - "3003:3003"
    networks:
      app_net:
        aliases:
          - "carros"

  comprasyvistas:
    image: joandatabrick/comprasyvistas-service:latest
    env_file:
      - .env
    ports:
      - "3002:3002"
    networks:
      app_net:
        aliases:
          - comprasyvistas

  usuarios:
    image: joandatabrick/usuarios-service:latest
    env_file:
      - .env
    ports:
      - "3001:3001"
    networks:
      app_net:
        aliases:
          - usuarios
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      app_net:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      app_net:
        aliases:
          - grafana

  rabbitmq:
    image: rabbitmq:3-management
    ports: 
      - "5672:5672"
      - "15672:15672"
    env_file: 
      - "rabbit_mq.env"
    networks:
      app_net:
        aliases:
          - rabbitmq
  web:
    image: auto-mundo-usado-carroscaros_frontend:v2
    ports:
      - "8080:8080"
    networks:
      app_net:
        aliases:
          - web
networks:
  app_net:
    external: true

configs:
  haproxy_cfg:
    file: ./haproxy/haproxy.cfg
